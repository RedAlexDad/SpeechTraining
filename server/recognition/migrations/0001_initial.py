# Generated by Django 4.1 on 2024-04-11 21:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Никнейм"
                    ),
                ),
                ("password", models.CharField(max_length=255, verbose_name="Пароль")),
                (
                    "is_moderator",
                    models.BooleanField(
                        default=False,
                        verbose_name="Является ли пользователь логопедом?",
                    ),
                ),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("name", models.TextField(verbose_name="Имя")),
                ("lastname", models.TextField(verbose_name="Фамилия")),
                ("fathername", models.TextField(verbose_name="Отчество")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "db_table": "account",
            },
        ),
        migrations.CreateModel(
            name="DataRecognitionAndSynthesis",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "sequence_number",
                    models.IntegerField(verbose_name="Порядковый номер"),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Клиент",
                    ),
                ),
            ],
            options={
                "verbose_name": "Данные распознавания и синтеза речи",
                "db_table": "data_recognition_and_synthesis",
            },
        ),
        migrations.CreateModel(
            name="RecognitionData",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "data_recognition",
                    models.BinaryField(null=True, verbose_name="Запись голоса"),
                ),
                (
                    "word_for_check",
                    models.TextField(null=True, verbose_name="Слово для проверки"),
                ),
                (
                    "transcription_word",
                    models.TextField(null=True, verbose_name="Слово транскрибации"),
                ),
                (
                    "date_recoding",
                    models.DateField(null=True, verbose_name="Дата записи"),
                ),
                ("wer", models.FloatField(null=True, verbose_name="WER")),
                ("cer", models.FloatField(null=True, verbose_name="CER")),
                ("mer", models.FloatField(null=True, verbose_name="MER")),
                ("wil", models.FloatField(null=True, verbose_name="WIL")),
                ("iwer", models.FloatField(null=True, verbose_name="IWER")),
            ],
            options={
                "verbose_name": "Распознавание речи",
                "db_table": "recognition_data",
            },
        ),
        migrations.CreateModel(
            name="SynthesisData",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "data_recognition",
                    models.BinaryField(null=True, verbose_name="Синтез речи"),
                ),
                (
                    "word_synthesis",
                    models.TextField(null=True, verbose_name="Слово синтеза"),
                ),
                (
                    "word_input",
                    models.TextField(null=True, verbose_name="Введенное слово"),
                ),
                (
                    "date_synthesis",
                    models.DateField(null=True, verbose_name="Дата синтеза"),
                ),
                ("wer", models.FloatField(null=True, verbose_name="WER")),
            ],
            options={
                "verbose_name": "Синтез речи",
                "db_table": "synthesis_data",
            },
        ),
        migrations.CreateModel(
            name="Text",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("theme", models.TextField(verbose_name="Тема")),
                ("text", models.TextField(verbose_name="Текст")),
                ("date_text", models.DateField(verbose_name="Дата текста")),
            ],
            options={
                "verbose_name": "Текст",
                "db_table": "text",
            },
        ),
        migrations.CreateModel(
            name="Recommendation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "recommendation_type",
                    models.TextField(null=True, verbose_name="Тип рекомендации"),
                ),
                (
                    "recommendation_text_by_llm",
                    models.TextField(
                        null=True, verbose_name="Текст рекомендации (LLM)"
                    ),
                ),
                (
                    "recommendation_text_by_logopedist",
                    models.TextField(
                        null=True, verbose_name="Текст рекомендации (логопед)"
                    ),
                ),
                (
                    "date_recommendation",
                    models.DateField(null=True, verbose_name="Дата рекомендации"),
                ),
                (
                    "data_recognition_and_synthesis",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="recognition.datarecognitionandsynthesis",
                        verbose_name="Данные распознавания и синтеза",
                    ),
                ),
                (
                    "logopedist",
                    models.ForeignKey(
                        limit_choices_to={"is_moderator": True},
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Логопед",
                    ),
                ),
            ],
            options={
                "verbose_name": "Рекомендация",
                "db_table": "recommendation",
            },
        ),
        migrations.AddField(
            model_name="datarecognitionandsynthesis",
            name="recognition_data",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="recognition.recognitiondata",
                verbose_name="Данные распознавания",
            ),
        ),
        migrations.AddField(
            model_name="datarecognitionandsynthesis",
            name="synthesis_data",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="recognition.synthesisdata",
                verbose_name="Данные синтеза",
            ),
        ),
        migrations.AddField(
            model_name="datarecognitionandsynthesis",
            name="text",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="recognition.text",
                verbose_name="Текст",
            ),
        ),
    ]
